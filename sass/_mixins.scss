@mixin radius ($radius) {
	-moz-border-radius:$radius;
	-webkit-border-radius:$radius;
	border-radius:$radius;
}

@mixin opacity ($value) {
	opacity: $value;
	-khtml-opacity: $value;
	-moz-opacity: $value;
	$opacity-ie: $value * 100;
	filter: alpha(opacity=$opacity-ie); //ie-8
}

@mixin clearfix {
	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}
}

@mixin vertical-align {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-moz-transform: translateY(-50%);
	transform: translateY(-50%);
}

@mixin breakpoint ($point, $value:0) {
	@if $point == "small" {
		@media (min-width:320px) { @content; }
	}

	@else if $point == "medium" {
		@media (min-width:768px) { @content; }
	}

	@else if $point == "large" {
		@media (min-width:1280px) { @content; }
	}

	@else {
		@meadia ($point == $value) { @content }
	}
}

@mixin grid ($cols, $gutter:0, $childs: ".item") {
	width: auto;
	margin-right: -$gutter;

	#{$childs} {
		float: left;
		width: (100%/$cols);
		padding-right: $gutter;
		background-clip: content-box;
	}
}

@mixin keyframes ($name) {
	@-moz-keyframes #{$name} {
		@content;
	}
	
	@-webkit-keyframes #{$name} {
		@content;
	}
	
	@-o-keyframes #{$name} {
		@content;
	}
	
	@keyframes #{$name} {
		@content;
	}
}

@mixin animation ($arguments...) {
	-moz-animation: $arguments;
	-webkit-animation: $arguments;
	-o-animation: $arguments;
	animation: $arguments;
}

@mixin transition ($arguments...) {
	-moz-transition: $arguments;
	-webkit-transition: $arguments;
	transition: $arguments;
}

@mixin blocks-grid ($blocks) {
	$blocks-grid: $blocks;
	$blocks-grid-margin: $blocks / 2;
	$blocks-width-size: 100% / $blocks-grid;
	$blocks-height-size: 100vw / $blocks-grid;
	width: $blocks-width-size;
	height: $blocks-height-size;
	@include background-clip(padding-box);
	border: #{$blocks-grid-margin}px solid transparent;

	&.course-important {
		width: $blocks-width-size * 2;
		height: $blocks-height-size * 2;
	}
}